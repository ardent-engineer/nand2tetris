// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
	DMux8Way(in = load, sel = address[0..2], a = loadReg0, b = loadReg1, c = loadReg2, d = loadReg3, e = loadReg4, f = loadReg5, g = loadReg6, h = loadReg7);
	RAM64(in = in, load = loadReg0, address = address[3..8], out =  out0);
	RAM64(in = in, load = loadReg1, address = address[3..8], out =  out1);
	RAM64(in = in, load = loadReg2, address = address[3..8], out =  out2);
	RAM64(in = in, load = loadReg3, address = address[3..8], out =  out3);
	RAM64(in = in, load = loadReg4, address = address[3..8], out =  out4);
	RAM64(in = in, load = loadReg5, address = address[3..8], out =  out5);
	RAM64(in = in, load = loadReg6, address = address[3..8], out =  out6);
	RAM64(in = in, load = loadReg7, address = address[3..8], out =  out7);
	Mux8Way16(a = out0, b = out1, c = out2, d = out3, e = out4, f = out5, g = out6, h = out7, sel = address[0..2], out = out);
}